(()=>{var __webpack_modules__={106:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('\n;// ./src/components/jsComponents/stringExtractor.js\n// this function searches for a specific character in the string and returns the string preceding that character.\nfunction stringExtractor(str, _char) {\n  var index = str.indexOf(_char);\n  return index !== -1 ? str.slice(0, index).trim() : str.trim();\n}\n;// ./src/components/jsComponents/goBack.js\n// Fill the Result container with an empty value so that the last population reappears\nfunction goBack(containerResult, containerCoverBook) {\n  containerResult.innerHTML = "";\n  containerCoverBook.innerHTML = "";\n  return containerResult, containerCoverBook;\n}\n;// ./src/components/jsComponents/spaceRemover.js\n//this function removes spaces within a string and returns the string with the underscore instead of the spaces\nfunction spaceRemover(str) {\n  return str.replace(/\\s+/g, "_");\n}\n;// ./src/js/generateUrl.js\n/** In this function the URL is generated with the data entered by the visitor*/\n\nfunction generateUrl(categoryForm) {\n  // Ottieni e normalizza l\'input dell\'utente\n  var valueInput = categoryForm.value.toLowerCase();\n  if (valueInput === "") {\n    throw new Error("Enter a category first");\n  }\n  if (valueInput.includes(" ")) {\n    console.log("Include space"); // Per il debug\n    valueInput = spaceRemover(valueInput);\n    console.log(valueInput); // Per il debug\n  }\n\n  // Genera e restituisci l\'URL\n  return new URL("".concat(valueInput, ".json"), "https://openlibrary.org/subjects/");\n}\n;// ./src/js/handleDescription.js\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\n/** In this function we manage the description in the various cases that may occur to us*/\n\nvar buttonGoBack = document.querySelector(".goBack");\nfunction handleDescription(respDetails, valueLi, containerResult) {\n  // Reset container\n  containerResult.innerHTML = "";\n  buttonGoBack.style.display = "block";\n  if (!respDetails.description) {\n    // Case: Description absent\n    containerResult.innerHTML += "\\n      <p>\\n        <h3>Description ".concat(valueLi, "</h3>\\n        Descrizione non presente, per maggiori info visitare il sito:\\n        <a href=\\"https://openlibrary.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">openLibrary.org</a>\\n      </p>");\n  } else if (_typeof(respDetails.description) === "object" && respDetails.description.value) {\n    // Case: Description as object\n    containerResult.innerHTML += "\\n      <p>\\n        <h3>".concat(valueLi, "</h3>\\n        ").concat(respDetails.description.value, "\\n      </p>");\n  } else {\n    // Case: Description as string, partial extraction\n    var extractedDetails = stringExtractor(respDetails.description, "Also contained in");\n    containerResult.innerHTML += "\\n      <p>\\n        <h3>".concat(valueLi, "</h3>\\n        ").concat(extractedDetails, "\\n      </p>");\n  }\n}\n// EXTERNAL MODULE: ./node_modules/axios/lib/axios.js + 1 modules\nvar axios = __webpack_require__(11);\n;// ./src/js/fetchBookDetails.js\n/** This function makes an API request to get data for the book description. Furthermore, by managing the numCover variable we extract the cover_id which we insert into the image URL to obtain the cover*/\n\n\nfunction fetchBookDetails(newUrlDetails, valueLi, numCover, containerResult, containerCoverBook) {\n  return axios/* default */.A.get(newUrlDetails).then(function (response) {\n    // Check if the response status is what you expect\n    if (response.status !== 200) {\n      throw new Error("Request failed in fetchBookDetails with status ".concat(response.status));\n    }\n    var respDetails = response.data;\n    console.log(respDetails.description); // Debug\n\n    containerResult.innerHTML = "";\n    containerCoverBook.innerHTML = "";\n    setTimeout(function () {\n      handleDescription(respDetails, valueLi, containerResult);\n    }, 2000);\n    containerCoverBook.innerHTML += "<img src=\\"https://covers.openlibrary.org/b/id/".concat(numCover, "-M.jpg?default=true\\" alt=\\"").concat(valueLi, "\\">");\n  });\n}\n// EXTERNAL MODULE: ./node_modules/lodash/lodash.js\nvar lodash = __webpack_require__(543);\nvar lodash_default = /*#__PURE__*/__webpack_require__.n(lodash);\n;// ./src/js/fetchAuthors.js\n/**This function makes an API request and manages data to display a list of book titles and authors of the category selected by the user */\n ///to use the _.get method\n\nfunction fetchAuthors(newUrl, containerResult, containerCoverBook, collectedData) {\n  return axios/* default */.A.get(newUrl).then(function (response) {\n    // Check if the response status is what you expect\n    if (response.status !== 200) {\n      throw new Error("Request failed in fetchAuthors with status ".concat(response.status));\n    }\n    var resp = response.data; // Access response data\n    console.log(resp); // Debug\n\n    var authors = lodash_default().get(resp, "works", []); // Extract the array of objects containing authors and book titles\n\n    if (authors.length === 0) {\n      throw new Error("The category entered is invalid");\n    }\n    console.log(authors); // Debug\n    containerCoverBook.innerHTML = "";\n    containerResult.innerHTML = "";\n\n    // Iterate over the authors array to populate `collectedData` and update the DOM\n    authors.forEach(function (element) {\n      var objAuthors = lodash_default().get(element, "authors[0].name", "Unknown");\n      var objTitle = lodash_default().get(element, "title", "Unknown");\n      var objKey = lodash_default().get(element, "key", "Unknown");\n      var objIdCover = lodash_default().get(element, "cover_id", "Unknown");\n\n      // Create an array of objects with corresponding title, author, and key\n      collectedData.push({\n        title: objTitle,\n        authors: objAuthors,\n        key: objKey,\n        coverId: objIdCover\n      });\n\n      // Populate the containerResult with titles and authors\n      containerResult.innerHTML += "<li>".concat(objTitle, " - ").concat(objAuthors, "</li>");\n    });\n    return {\n      collectedData: collectedData,\n      containerResult: containerResult,\n      containerCoverBook: containerCoverBook\n    };\n  })["catch"](function (error) {\n    console.error("Error fetching authors:", error.message);\n    throw new Error(error.message);\n  });\n}\n;// ./src/js/detailsUrlDescription.js\n/**This function takes the foundBook object and reprocesses it to return the book key to identify the description and the cover id number to display the cover image */\nfunction detailsUrlDescription(foundBook) {\n  if (foundBook) {\n    console.log("Book found:", foundBook.key);\n    console.log("Number cover id found:", foundBook.coverId);\n    var keyBook = foundBook.key;\n    var numCover = foundBook.coverId;\n    return {\n      keyBook: keyBook,\n      numCover: numCover\n    }; // return an object with the book key and the cover id\n  } else {\n    throw new Error("Book not found");\n  }\n}\n// EXTERNAL MODULE: ./src/components/logo/logo-book-finder-dark.png\nvar logo_book_finder_dark = __webpack_require__(150);\nvar logo_book_finder_dark_default = /*#__PURE__*/__webpack_require__.n(logo_book_finder_dark);\n;// ./src/components/logo/logo.js\n/** This function creates a new image object to insert the image B of the Book Finder title and insert it inside the index.js file and then attach it inside the header*/\n\n\n\nfunction logoFn() {\n  var logoDomImage = new Image();\n  logoDomImage.src = (logo_book_finder_dark_default());\n  logoDomImage.className = "my-logo";\n  console.log(logoDomImage);\n  return logoDomImage;\n}\n/* harmony default export */ const logo = (logoFn);\n// EXTERNAL MODULE: ./src/components/logo/icon-footer-lr-web-site.png\nvar icon_footer_lr_web_site = __webpack_require__(314);\nvar icon_footer_lr_web_site_default = /*#__PURE__*/__webpack_require__.n(icon_footer_lr_web_site);\n;// ./src/components/logo/iconMySite.js\n\n\nfunction iconFn() {\n  var iconDomImage = new Image();\n  iconDomImage.src = (icon_footer_lr_web_site_default());\n  iconDomImage.className = "my-icon";\n  console.log(iconDomImage);\n  return iconDomImage;\n}\n/* harmony default export */ const iconMySite = (iconFn);\n;// ./src/js/index.js\n\n\n\n\n\n\n\n\n//import axios from "axios";\n\nvar containerEvent = document.querySelector(".wrapperColumn");\nvar containerResult = document.querySelector(".containerTitleAuthors");\nvar containerCoverBook = document.querySelector(".containerCoverBook");\nvar categoryForm = document.querySelector("#category");\nvar js_buttonGoBack = document.querySelector(".goBack");\nvar collectedData = [];\n\nvar containerLogo = document.querySelector(".containerLogo");\nif (!containerLogo.querySelector(".my-logo")) {\n  containerLogo.appendChild(logo());\n}\n\nvar containerIcon = document.querySelector(".row-social-footer");\nif (!containerIcon.querySelector(".my-icon")) {\n  containerIcon.appendChild(iconMySite());\n}\n\n// Prevenire la duplicazione del listener\nif (!window.isEventListenerAttached) {\n  window.isEventListenerAttached = true;\n  containerEvent.addEventListener("click", function (event) {\n    if (event.target.tagName === "BUTTON") {\n      //user click on the search button\n      console.log(event.target.tagName); //for debugging\n      event.preventDefault(); //to block the default submit event\n      /**the valueInput constant takes the value typed by the user in the textbox and first removes the outer spaces of the string with .trim() and then converts the string to lowercase. */\n      var valueInput = categoryForm.value.trim().toLowerCase();\n      /**this if returns an error if the user does not enter a category and presses the search button */\n      if (!valueInput) {\n        throw new Error("Enter a category first");\n      }\n      //we generate the url with the generateUrl function\n      var newUrl = generateUrl(categoryForm);\n      //console.log(newUrl); //for debugging\n      //console.log(valueInput); //for debugging\n\n      /**we send the fetch .get request with axios at https://openlibrary.org via the fetchAuthors function */\n      fetchAuthors(newUrl, containerResult, containerCoverBook, collectedData).then(function (response) {});\n    }\n    if (event.target.tagName === "LI") {\n      //the user clicks on a LI containing the title of the book and the author\n\n      /**the variable valueLi takes the value containing in the clicked LI element */\n      var valueLi = event.target.textContent;\n\n      /**We extract the entire string before the "-" character to have only the title of the book without the author, using the stringExtractor function */\n      var extractedTitle = stringExtractor(valueLi, " - ");\n      console.log(extractedTitle); //for debugging\n\n      /**We compare the string extracted in the extract Title constant with the Data collection array to find a reference with the title selected by the user. */\n      var foundBook = collectedData.find(function (element) {\n        return element.title.toLowerCase().includes(extractedTitle.toLowerCase());\n      });\n      console.log(foundBook); //for debugging\n\n      /**from the correspondence found, the identification key of the book and the number identified for the book cover are returned */\n      var _detailsUrlDescriptio = detailsUrlDescription(foundBook),\n        keyBook = _detailsUrlDescriptio.keyBook,\n        numCover = _detailsUrlDescriptio.numCover;\n      console.log(keyBook); //for debuggin\n      console.log(numCover); //for debuggin\n\n      /**the book key is used to create the url and send a new fetch request for the details of the book selected by the user */\n      var newUrlDetails = new URL("".concat(keyBook, ".json?details=true"), "https://openlibrary.org/");\n      // Make a request to the API for the book\'s description\n      fetchBookDetails(newUrlDetails, valueLi, numCover, containerResult, containerCoverBook)\n      /**If the request is successful, the response is handled in fetchBookDetails and the description with the respective book cover is displayed */.then(function (response) {})["catch"](function (error) {\n        console.error("Error fetching book details:", error.message);\n        throw new Error(error.message);\n      });\n    }\n    /**with the goback function combined with the creation of a dynamic button that appears only after viewing the book description, we can go back to the titles. */\n    if (event.target.className === "goBack") {\n      js_buttonGoBack.style.display = "none";\n      goBack(containerResult, containerCoverBook);\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///106\n')},314:(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "imgs/icon-footer-lr-web-site.69ca14e5.png";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0LmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixxQkFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9qZWN0LWJvb2stZmluZGVyLy4vc3JjL2NvbXBvbmVudHMvbG9nby9pY29uLWZvb3Rlci1sci13ZWItc2l0ZS5wbmc/MTdkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWdzL2ljb24tZm9vdGVyLWxyLXdlYi1zaXRlLjY5Y2ExNGU1LnBuZ1wiOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///314\n')},150:(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "imgs/logo-book-finder-dark.81441a34.png";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUwLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixxQkFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9qZWN0LWJvb2stZmluZGVyLy4vc3JjL2NvbXBvbmVudHMvbG9nby9sb2dvLWJvb2stZmluZGVyLWRhcmsucG5nPzhmNjEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1ncy9sb2dvLWJvb2stZmluZGVyLWRhcmsuODE0NDFhMzQucG5nXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///150\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var e=__webpack_module_cache__[Q];if(void 0!==e)return e.exports;var B=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(B.exports,B,B.exports,__webpack_require__),B.loaded=!0,B.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,e,B,n)=>{if(!e){var U=1/0;for(t=0;t<deferred.length;t++){for(var[e,B,n]=deferred[t],c=!0,F=0;F<e.length;F++)(!1&n||U>=n)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](e[F])))?e.splice(F--,1):(c=!1,n<U&&(U=n));if(c){deferred.splice(t--,1);var l=B();void 0!==l&&(Q=l)}}return Q}n=n||0;for(var t=deferred.length;t>0&&deferred[t-1][2]>n;t--)deferred[t]=deferred[t-1];deferred[t]=[e,B,n]},__webpack_require__.n=Q=>{var e=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(e,{a:e}),e},__webpack_require__.d=(Q,e)=>{for(var B in e)__webpack_require__.o(e,B)&&!__webpack_require__.o(Q,B)&&Object.defineProperty(Q,B,{enumerable:!0,get:e[B]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,e)=>Object.prototype.hasOwnProperty.call(Q,e),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),(()=>{var Q;__webpack_require__.g.importScripts&&(Q=__webpack_require__.g.location+"");var e=__webpack_require__.g.document;if(!Q&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(Q=e.currentScript.src),!Q)){var B=e.getElementsByTagName("script");if(B.length)for(var n=B.length-1;n>-1&&(!Q||!/^http(s?):/.test(Q));)Q=B[n--].src}if(!Q)throw new Error("Automatic publicPath is not supported in this browser");Q=Q.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=Q})(),(()=>{var Q={57:0};__webpack_require__.O.j=e=>0===Q[e];var e=(e,B)=>{var n,U,[c,F,l]=B,t=0;if(c.some((e=>0!==Q[e]))){for(n in F)__webpack_require__.o(F,n)&&(__webpack_require__.m[n]=F[n]);if(l)var s=l(__webpack_require__)}for(e&&e(B);t<c.length;t++)U=c[t],__webpack_require__.o(Q,U)&&Q[U]&&Q[U][0](),Q[U]=0;return __webpack_require__.O(s)},B=self.webpackChunkproject_book_finder=self.webpackChunkproject_book_finder||[];B.forEach(e.bind(null,0)),B.push=e.bind(null,B.push.bind(B))})();var __webpack_exports__=__webpack_require__.O(void 0,[11,420,907,62,543],(()=>__webpack_require__(106)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();